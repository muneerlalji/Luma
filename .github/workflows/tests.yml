name: Run Tests

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]
  workflow_dispatch:

jobs:
  backend-tests:
    name: Backend Tests
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_PASSWORD: test_password
          POSTGRES_USER: test_user
          POSTGRES_DB: luma_test
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: "1.24.4"
          cache: true

      - name: Install dependencies
        working-directory: ./backend
        run: go mod download

      - name: Run tests
        working-directory: ./backend
        env:
          JWT_SECRET: test-secret-key-for-testing-only
          FRONTEND_URL: http://localhost:3000
          CLAUDE_API_KEY: sk-ant-api03-1234567890
          POSTGRES_DSN: postgres://test_user:test_password@localhost:5432/luma_test?sslmode=disable
          AWS_ACCESS_KEY_ID: test_access_key_id
          AWS_SECRET_ACCESS_KEY: test_secret_access_key
          AWS_REGION: test-region
          S3_BUCKET: test-bucket-name
          PORT: 8080
          SMTP_HOST: smtp.gmail.com
          SMTP_PORT: 587
          SMTP_USER: test@example.com
          SMTP_PASS: test_password
          SMTP_FROM: test@example.com
        run: go test -v -race -coverprofile=coverage.out ./...

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v4
        with:
          file: ./backend/coverage.out
          flags: backend
          name: backend-coverage

  frontend-tests:
    name: Frontend Tests
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "18"
          cache: "npm"
          cache-dependency-path: frontend/package-lock.json

      - name: Install dependencies
        working-directory: ./frontend
        run: npm ci

      - name: Run tests
        working-directory: ./frontend
        env:
          NEXT_PUBLIC_API_URL: http://localhost:8080
        run: npm test -- --coverage --watchAll=false --ci

      - name: Run linting
        working-directory: ./frontend
        run: npm run lint

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v4
        with:
          file: ./frontend/coverage/lcov.info
          flags: frontend
          name: frontend-coverage

  build-verification:
    name: Build Verification
    runs-on: ubuntu-latest
    needs: [backend-tests, frontend-tests]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "18"
          cache: "npm"
          cache-dependency-path: frontend/package-lock.json

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: "1.24.4"
          cache: true

      - name: Install frontend dependencies
        working-directory: ./frontend
        run: npm ci

      - name: Install backend dependencies
        working-directory: ./backend
        run: go mod download

      - name: Build frontend
        working-directory: ./frontend
        run: npm run build

      - name: Build backend
        working-directory: ./backend
        run: go build -o luma-backend .

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-artifacts
          path: |
            frontend/.next/
            backend/luma-backend
          retention-days: 7
